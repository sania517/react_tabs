{"version":3,"sources":["components/Tab/Tab.js","components/Tabs/Tabs.js","App.js","index.js"],"names":["Tab","this","props","activeClass","toggle","id","nameClass","className","onClick","type","children","React","PureComponent","Tabs","handlerClick","event","setState","index","target","state","tabs","map","tab","i","key","title","content","Component","preparedTabs","App","ReactDOM","render","document","getElementById"],"mappings":"uSAIaA,G,YAAb,iLACY,IAAD,EAC6BC,KAAKC,MAAjCC,EADD,EACCA,YAAaC,EADd,EACcA,OAAQC,EADtB,EACsBA,GACvBC,EAAS,wBAAoBH,GAEnC,OACE,wBAAII,UAAWD,GACb,4BACEE,QAASJ,EACTC,GAAIA,EACJE,UAAU,eACVE,KAAK,UAEJR,KAAKC,MAAMQ,eAbtB,GAAyBC,IAAMC,gBCElBC,EAAb,YACE,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KAORY,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,OAAQF,EAAMG,OAAOb,MANrC,EAAKc,MAAQ,CACXF,MAAO,GAJQ,EADrB,sEAaY,IAAD,OACCG,EAASnB,KAAKC,MAAdkB,KAER,OACE,oCACE,wBAAIb,UAAU,QACXa,EAAKC,KAAI,SAACC,EAAKC,GAAN,OACR,kBAAC,EAAD,CACEC,IAAKF,EAAIjB,GACTA,GAAIkB,EACJpB,YAAaoB,IAAM,EAAKJ,MAAMF,MAC1B,wBACA,GACJb,OAAQ,EAAKU,cAEZQ,EAAIG,UAGT,wBAAIlB,UAAU,yBAEhB,uBAAGA,UAAU,cAAca,EAAKnB,KAAKkB,MAAMF,OAAOS,cAjC1D,GAA0Bf,IAAMgB,WCmB1BC,EAnBO,CACX,CACEH,MAAO,QACPC,QAAS,eAEX,CACED,MAAO,QACPC,QAAS,eAEX,CACED,MAAO,QACPC,QAAS,eAEX,CACED,MAAO,QACPC,QAAS,gBAIaL,KAAI,SAACC,EAAKC,GAKlC,OAJY,eACPD,EADO,CACFjB,GAAIkB,OAUDM,EAJH,kBACV,kBAAC,EAAD,CAAMT,KAAMQ,KC9BdE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.94de2d5d.chunk.js","sourcesContent":["import React from 'react';\nimport './Tab.css';\nimport PropTypes from 'prop-types';\n\nexport class Tab extends React.PureComponent {\n  render() {\n    const { activeClass, toggle, id } = this.props;\n    const nameClass = `tabs__element ${activeClass}`;\n\n    return (\n      <li className={nameClass}>\n        <button\n          onClick={toggle}\n          id={id}\n          className=\"tabs__button\"\n          type=\"button\"\n        >\n          {this.props.children}\n        </button>\n      </li>\n    );\n  }\n}\n\nTab.propTypes = {\n  activeClass: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './Tabs.css';\nimport PropTypes from 'prop-types';\n\nimport { Tab } from '../Tab/Tab';\n\nexport class Tabs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      index: 0,\n    };\n  }\n\n  handlerClick = (event) => {\n    this.setState({ index: +event.target.id });\n  }\n\n  render() {\n    const { tabs } = this.props;\n\n    return (\n      <>\n        <ul className=\"tabs\">\n          {tabs.map((tab, i) => (\n            <Tab\n              key={tab.id}\n              id={i}\n              activeClass={i === this.state.index\n                ? 'tabs__element--active'\n                : ''}\n              toggle={this.handlerClick}\n            >\n              {tab.title}\n            </Tab>\n          ))}\n          <li className=\"tabs__empty-element\" />\n        </ul>\n        <p className=\"tabs__text\">{tabs[this.state.index].content}</p>\n      </>\n    );\n  }\n}\n\nTabs.propTypes = {\n  tabs: PropTypes.arrayOf({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport './App.css';\n\nimport { Tabs } from './components/Tabs/Tabs';\n\n// eslint-disable-next-line no-unused-vars\nconst tabs = [\n  {\n    title: 'Tab 1',\n    content: 'Some text 1',\n  },\n  {\n    title: 'Tab 2',\n    content: 'Some text 2',\n  },\n  {\n    title: 'Tab 4',\n    content: 'Some text 3',\n  },\n  {\n    title: 'Tab 4',\n    content: 'Some text 4',\n  },\n];\n\nconst preparedTabs = tabs.map((tab, i) => {\n  const newTab = {\n    ...tab, id: i,\n  };\n\n  return newTab;\n});\n\nconst App = () => (\n  <Tabs tabs={preparedTabs} />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}